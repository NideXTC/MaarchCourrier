CREATE TABLE ACTIONS_GROUPBASKETS
(
  ID_ACTION NUMBER NOT NULL,
  WHERE_CLAUSE VARCHAR2(1000 CHAR),
  GROUP_ID VARCHAR2(32 CHAR) NOT NULL,
  BASKET_ID VARCHAR2(32 CHAR) NOT NULL,
  USED_IN_BASKETLIST VARCHAR2(1 CHAR) DEFAULT 'Y' NOT NULL,
  USED_IN_ACTION_PAGE VARCHAR2(1 CHAR) DEFAULT 'Y' NOT NULL,
  DEFAULT_ACTION_LIST VARCHAR2(1 CHAR) DEFAULT 'N' NOT NULL
, CONSTRAINT ACTIONS_GROUPBASKETS_PK PRIMARY KEY
  (
    ID_ACTION,
    GROUP_ID,
    BASKET_ID
  )
)
;

CREATE TABLE BASKETS
(
  COLL_ID VARCHAR2(32 CHAR) NOT NULL,
  BASKET_ID VARCHAR2(32 CHAR) NOT NULL,
  BASKET_NAME VARCHAR2(255 CHAR) NOT NULL,
  BASKET_DESC VARCHAR2(255 CHAR) NOT NULL,
  BASKET_CLAUSE VARCHAR2(1000 CHAR) NOT NULL,
  IS_GENERIC VARCHAR2(6 CHAR) DEFAULT 'N' NOT NULL,
  ENABLED VARCHAR2(1 CHAR) DEFAULT 'Y' NOT NULL
, CONSTRAINT BASKETS_PK PRIMARY KEY
  (
    COLL_ID,
    BASKET_ID
  )
)
;

CREATE TABLE GROUPBASKET
(
  GROUP_ID VARCHAR2(32 CHAR) NOT NULL,
  BASKET_ID VARCHAR2(32 CHAR) NOT NULL,
  SEQUENCE NUMBER DEFAULT 0 NOT NULL,
  REDIRECT_BASKETLIST VARCHAR2(2048 CHAR) DEFAULT NULL,
  REDIRECT_GROUPLIST VARCHAR2(2048 CHAR) DEFAULT NULL,
  RESULT_PAGE VARCHAR2(255 CHAR) DEFAULT 'show_list1.php',
  CAN_REDIRECT VARCHAR2(1 CHAR) DEFAULT 'N' NOT NULL,
  CAN_DELETE VARCHAR2(1 CHAR) DEFAULT 'N' NOT NULL,
  CAN_INSERT VARCHAR2(1 CHAR) DEFAULT 'N' NOT NULL
, CONSTRAINT GROUPBASKET_PK PRIMARY KEY
  (
    GROUP_ID,
    BASKET_ID
  )
)
;

CREATE TABLE USER_ABS
(
  USER_ABS VARCHAR2(32 CHAR) NOT NULL,
  SYSTEM_ID NUMBER NOT NULL,
  NEW_USER VARCHAR2(32 CHAR) NOT NULL,
  BASKET_ID VARCHAR2(255 CHAR) NOT NULL,
  BASKET_OWNER VARCHAR2(255 CHAR),
  IS_VIRTUAL VARCHAR2(1 CHAR) DEFAULT 'N'
, CONSTRAINT USER_ABS_PK PRIMARY KEY
  (
    SYSTEM_ID
  )
)
;


 CREATE SEQUENCE  "SEQ_USER_ABS"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 create or replace TRIGGER TRG_USER_ABS
 BEFORE INSERT ON USER_ABS 
FOR EACH ROW 
BEGIN
  SELECT SEQ_USER_ABS.NEXTVAL INTO :NEW.USER_ABS FROM DUAL;
END;
/
